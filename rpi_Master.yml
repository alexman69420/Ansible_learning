---

- hosts: all
  become: true
  ignore_errors: yes #Commented out to stop on errors 
  tasks:
  
  
    - name: Get the MAC address
      debug: msg="{{ hostvars[inventory_hostname] }}"


    - name: Copy the local public key to remote RPI
      copy:
        src: /home/alex/.ssh/id_rsa.pub
        dest: /root/.ssh/authorized_keys


    - name: Change RPIs to allow RSA&PubkeyAuthentication
      shell: |
        sed -i -e 's/PubkeyAuthentication//g' /etc/ssh/sshd_config
        echo "PubkeyAuthentication yes
        RSAAuthentication yes" >> /etc/ssh/sshd_config

  
    - name: Configure consistence interfaces
      shell: |
        echo "SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"{{ hostvars[inventory_hostname].ansible_eth1.macaddress }}\", ATTR{dev_id}==\"0x0\", ATTR{type}==\"1\", NAME=\"eth_service\"
        SUBSYSTEM==\"net\", ACTION==\"add\", DRIVERS==\"?*\", ATTR{address}==\"{{ hostvars[inventory_hostname].ansible_wlan1.macaddress }}\", ATTR{dev_id}==\"0x0\", ATTR{type}==\"1\", NAME=\"wlan0\"" > /etc/udev/rules.d/70-persistent-net.rules
      register: shell2_result
      
      
    - name: Remove Raspberry Pi WiFi interface
      shell: |
        echo "blacklist brcmfmac
        blacklist brcmutil" > /etc/modprobe.d/raspi-blacklist.conf
      register: shell_result


    #- name: Copy file with owner and permissions
     # copy:
      #  src: "/home/alex/Ansible_learning/keys/key.pub"
       # dest: "/root/.ssh/authorized_keys/key.pub"
        #mode: "preserve"


    #- name: Plume configs
      #shell: |
        #sudo mkdir -p /root/.ssh/
        #sudo chmod 700 /root/.ssh
        #sudo touch /root/.ssh/authorized_keys
        #sudo chmod 664 /root/.ssh/authorized_keys
        #sudo echo "{{lookup('file', '/home/alex/Ansible_learning/keys/key.pub') }}" >> /root/.ssh/authorized_keys/key.pub
        #chmod 600 /root/.ssh/authorized_keys/key.pub
        
        
#    - debug: msg="the value of foo.txt is {{lookup('file', '/etc/foo.txt') }}"


    - name: Configure consistence interfaces
      shell: |
        echo "auto eth_service
        iface eth_service inet dhcp" >> /etc/network/interfaces


    - name: Configure consistence interfaces
      shell: |
        echo "[Match]
        Name=eth_service
        [Network]
        DHCP=yes" > /etc/systemd/network/80-dhcp.network
        
        
    - name: Plume configs
      shell: |
        sudo systemctl disable NetworkManager
        
        
    - name: Reboot a slow machine that might have lots of updates to apply
      reboot:
    
    
    - name: Plume configs
      become: true
      become_user: root
      shell: |
        sudo update-alternatives --set editor /usr/bin/vim.tiny
        echo "syntax on
        set ignorecase
        set ruler
        set mouse=n" > /home/plume/.vimrc
        sudo touch /root/.vimrc
        echo "os=rpi" | sudo tee /tb.conf > /dev/null
        echo "wifi=802.11n" | sudo tee -a /tb.conf > /dev/null
        echo "mimo=2x2" | sudo tee -a /tb.conf > /dev/null
        echo "" | sudo tee -a /tb.conf > /dev/null 
        echo "WIFI_MON_IF=wlan0" | sudo tee /tbvars.conf > /dev/null
        echo "WIFI_IF=wlan0" | sudo tee -a /tbvars.conf > /dev/null
        echo "" | sudo tee -a /tbvars.conf > /dev/null


#    - name: Plume configs
#      shell: | 
#        echo "network={
#        ssid=\"PodWifi\"
#        psk=\"password\"
#        proto=RSN
#        key_mgmt=WPA-PSK
#        scan_ssid=1
#        priority=1
#        #bssid=BE:17:10:FC:0E:DD
#        }"


    - name: Ansible create file with content 
      copy:
        dest: "/etc/wpa_supplicant/wpa_supplicant.conf"
        content: |
          network={
                  ssid="PodWifi"
                  psk="password"
                  proto=RSN
                  key_mgmt=WPA-PSK
                  scan_ssid=1
                  priority=1
                  #bssid=BE:17:10:FC:0E:DD
          }

        
    - name: Plume configs
      become: true
      become_user: root
      shell: | 
        wpa_supplicant -Dnl80211 -iwlan0 -c /etc/wpa_supplicant/wpa_supplicant.conf -B
        
        
    - name: Plume configs
      become: true
      become_user: root
      shell: | 
        dhclient wlan0
      
      
    - name: Update apt-get repo and cache
      apt: update_cache=yes force_apt_get=yes cache_valid_time=3600
      become: true


    - name: Apt get install many things
      apt:
        name: 
          - iperf
          - iperf3
          - expect
          - speedtest-cli
          - miniupnpc
          - dnsutils
          - vim
          - bridge-utils
          - build-essential
          - dos2unix
          - fakeroot
          - nmap
          - sshpass 
          - traceroute
          - zip
          - unzip
          - wireless-tools
          - wpasupplicant
          - vlan
          - python-pexpect
        state: present
        update_cache: true
      become: true



      
